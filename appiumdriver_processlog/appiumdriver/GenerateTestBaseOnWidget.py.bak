import random
import string

import base64

from appiumdriver_processlog.appiumdriver.util.ProcessText import form_string


def generate_test_base_on_widget(driver, executable_elements, logging, i, appium_command, widgets, **kwargs):
    if len(executable_elements) == 0:
        print("{w} There is no executable element")
        logging.warning("{w} There is no executable element")
    else:
        print(len(executable_elements))
        selected_ele = random.choice(executable_elements)
        resource_id = selected_ele.get('resource-id')

        print(selected_ele, resource_id)

        # we re going ui?!
        if "apk_name" in kwargs and "test_number" in kwargs:
            # before: make a screenshot
            with open(f'ui/screenshots/{kwargs["apk_name"]}_test{kwargs["test_number"]}_seq{i}_before.png', "wb") as pngfile:
                pngfile.write(base64.b64decode(driver.get_screenshot_as_base64()))

            # before: get the screenshot
            with open(f'ui/pagesources/{kwargs["apk_name"]}_test{kwargs["test_number"]}_seq{i}_before.xml', "w") as pgfile:
                pgfile.write(driver.page_source)
            



        print(form_string("{~}", "resource-id is", str(resource_id)))
        logging.info(form_string("{~}", "resource-id is", str(resource_id)))

        widgets.add(resource_id)
        if resource_id is None or resource_id == '':
            print("branch1", resource_id)
            try:
                for node in selected_ele.iter():
                    if node.get('resource-id') is not None:
                        resource_id = node.get('resource-id')
                        print(form_string("{w} use resource-id of its child node", str(resource_id)))
                        logging.warning(form_string("{w} use resource-id of its child node", str(resource_id)))
                        break
            except Exception:
                print(form_string("{w} Something went wrong when using resource-id of its child node"))
                logging.error(form_string("{w} Something went wrong when using resource-id of its child node"))

        if resource_id is not None and resource_id != '':
            print("branch2", resource_id)

            try:
                select_element = driver.find_element_by_id(resource_id)
                event = select_element.get('operation') ### FIXME: BUG HERE?

                print(event)
                # click
                if True:
                    try:
                        print("branch2a")
                        if apk_name in kwargs and test_number in kwargs:
                            # before: log the element
                            with open(f'ui/clicklogs/{kwargs["apk_name"]}_test{kwargs["test_number"]}.log', "a") as clicklog:
                                clicklog.write(" ".join([str(i), str(resource_id), str(select_element.tag), str(select_element.attrib), str(select_element.text)]))
                                clicklog.write("\n")

                        select_element.click()
                        logging.info(form_string("{~}", "event {}:".format(i), "widget", "resource_id:", resource_id, "operation:",
                                                 "click"))
                        print(form_string("{~}", "event {}:".format(i), "widget", "resource_id:", resource_id, "operation:", "click"))
                        appium_command.append("driver.find_element_by_id('{}').click()".format(resource_id))

                    except Exception:
                        logging.exception()
                        logging.error(form_string("{w}", "event {}:".format(i), "widget", "Something went wrong when click",
                                                  resource_id))
                        print(form_string("{w}", "event {}:".format(i), "widget", "Something went wrong when click", resource_id))

            except Exception:
                print("branch3")

                print(form_string("{w}", "Can not find element by", str(resource_id)))
                logging.error(form_string("{w}", "Can not find element by", str(resource_id)))

        else:
            print(form_string("{w} resource-id is still None"))
            logging.warning(form_string("{w} resource-id is still None"))
